{
  "alfredsnippet" : {
    "snippet" : "from typing import Callable\n\nimport pandas as pd\nimport os\nimport shelve\nfrom multiprocessing import Pool\nfrom tqdm import tqdm\nfrom logging import getLogger\n\nlogger = getLogger(__name__)\n\ndef read_shelve(shelve_file: str) -> pd.DataFrame:\n    with shelve.open(shelve_file) as results:\n        keylist = sorted([int(k) for k in results.keys()])\n        df = pd.concat([results[str(k)][1] for k in keylist], sort=True)\n\n        df = pd.concat([results[k][1] for k in sorted(keylist.keys())], sort=True)\n    return df\n\ndef apply_multiprocess(\n        name: str,\n        df: pd.DataFrame,\n        func: Callable,\n        n_processes: int,\n        chunk_size: int,\n        working_dir: str = '.\/'\n    ) -> pd.DataFrame:\n\n    def _df_split_apply(tup_arg):\n        split_ind, subset, func = tup_arg\n        r = subset.apply(func, axis=1)\n        return (split_ind, r)\n\n    working_file = os.path.join(working_dir, \"%s_%s_%s_results.tmp\".format(name, func.__name__, chunk_size))\n    logger.info(f\"Saving progress status to {working_file}\")\n\n    # processing with multiprocesses\n    with shelve.open(working_file) as results:\n        pbar = tqdm(total=len(df), position=0)\n\n        # Resume\n        finished_chunks = set([int(k) for k in results.keys()])\n        pbar.desc = \"Resuming\"\n        for k in results.keys():\n            pbar.update(len(results[k][1]))\n\n        pool_data = (\n            (index, df[i:i + chunk_size], func) \n            for index, i in enumerate(range(0, len(df), chunk_size)) \n            if index not in finished_chunks\n        )\n        logger.info(f\"{len(df) \/\/ chunk_size} parts. {chunk_size} per part. Using {n_processes} processes\")\n\n        # Process data\n        pbar.desc = \"Processing\"\n        with Pool(n_processes) as pool:\n            for _, result in enumerate(pool.imap_unordered(_df_split_apply, pool_data, 2)):\n                results[str(result[0])] = result\n                pbar.update(len(result[1]))\n\n        pbar.close()\n\n    logger.info(\"Finished Processing.\")\n\n    # Load processed status\n    return read_shelve(working_file)\n",
    "uid" : "F96D52D9-30A7-4180-80F9-0E6C0034BC7E",
    "name" : "multiprocess for DataFrame",
    "keyword" : "pd_multiprocess"
  }
}